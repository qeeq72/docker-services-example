services:
  s3:
    image: minio/minio:RELEASE.2024-08-17T01-24-54Z
    environment:
      MINIO_ACCESS_KEY: user
      MINIO_SECRET_KEY: password
    volumes:
      - s3_volume:/data
    networks: &default-networks
      - common_net
    ports:
      - 11112:9001
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 2
    deploy:
      mode: global
      placement:
        constraints:
          - "node.labels.TAG==stage"
      restart_policy:
        condition: any
        delay: 2s
        max_attempts: 3
        window: 120s
      rollback_config:
        parallelism: 1
        order: stop-first
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        order: start-first

  db:
    image: postgres:16.4-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks: *default-networks
    healthcheck:
      test: ["CMD-SHELL", "psql -U user -d db -c 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 2
    deploy:
      mode: global
      placement:
        constraints:
          - "node.labels.TAG==stage"
      restart_policy:
        condition: any
        delay: 2s
        max_attempts: 3
        window: 120s
      rollback_config:
        parallelism: 1
        order: stop-first
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        order: start-first

  app:
    image: dockerbasics_swarm_app:latest
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: db
      S3_HOST: s3
      S3_PORT: 9000
      S3_ACCESS_KEY: user
      S3_SECRET_KEY: password
    networks: *default-networks
    ports:
      - 11111:80
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - "node.labels.TAG==stage"
      restart_policy:
        condition: any
        delay: 2s
        max_attempts: 3
        window: 30s
      rollback_config:
        parallelism: 1
        order: stop-first
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        order: start-first

networks:
  common_net:
    name: dockerbasics_swarm_net
    driver: overlay

volumes:
  db_volume:
    name: dockerbasics_swarm_db_volume
    driver: local
  s3_volume:
    name: dockerbasics_swarm_s3_volume
    driver: local
